1)	Что такое fetch? Зачем он нужен? Как он работает?
    Fetch - это обертка http, достает информацию из API.  По умолчанию использует promise.

2)	Что такое promise? Написать пример кода.
    Promise — это объект, который содержит свое состояние, имеет 3 состояния и нужен для асинхронных запросов.

1.	pending (ожидает ответа)
2.	fulFilled (успешное выполнение)
3.	rejected (выполнено с ошибкой).

3)	Стрелочная функция в ES6 это - …?
    Стрелочная функция более удобна и читабельна в объектно-ориентированном программировании, а
также контекст является анонимным если не дать ему значение.
	Пример кода:
Const ab= (a, b) => {
	Let c = a + b;
	Return c;
}
Который ещё можно сократить как:
let sum = (a, b) => a + b;


4)	Async, await что это - …? Написать пример кода.
    Специальный синтаксис для работы с promise.
    Async - ключевая функция заключается в том что он возвращает promise.
    Await – заставляет интерпретатор JS ждать до тех пор, пока promise справа не будет завершен.



Пример кода:
async function f() {

  let promise = new Promise((resolve, reject) => {
    setTimeout(() => resolve("готово!"), 1000)
  });

  let result = await promise; // будет ждать, пока промис не выполнится (*)

  alert(result); // "готово!"
}

f();


5)	Расскажите про контекст This.
    Контекст JS - значение переменной this внутри функции. Область видимости определяет доступ к переменным при вызове
функции и является уникальной для каждого вызова.
